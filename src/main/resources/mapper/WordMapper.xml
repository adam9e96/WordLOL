<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.adam9e96.wordlol.repository.mybatis.WordMapper">

    <!--  Word 엔티티와 데이터베이스 컬럼 간의 매핑 정의 -->
    <resultMap id="WordResultMap" type="com.adam9e96.wordlol.entity.Word">
        <id property="id" column="id"/>
        <result property="vocabulary" column="vocabulary"/>
        <result property="meaning" column="meaning"/>
        <result property="hint" column="hint"/>
        <result property="difficulty" column="difficulty"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>

        <!-- User 엔티티와 데이터베이스 컬럼 간의 매핑 정의 -->
        <association property="user" javaType="com.adam9e96.wordlol.entity.User">
            <id property="id" column="user_id"/>
            <result property="email" column="email"/>
            <result property="name" column="name"/>
            <result property="picture" column="picture"/>
            <result property="role" column="role"/>
        </association>

        <!-- 연관된 WordBook 객체 매핑 -->
        <association property="wordBook" javaType="com.adam9e96.wordlol.entity.WordBook">
            <!-- WordBook 의 기본키 매핑 (WordBook 클래스에 setId 메소드가 있어야 함) -->
            <id property="id" column="word_book_id"/>
        </association>
    </resultMap>

    <insert id="save" parameterType="com.adam9e96.wordlol.entity.Word" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO word(vocabulary, meaning, hint, difficulty, created_at, updated_at, user_id)
        VALUES (#{vocabulary}, #{meaning}, #{hint}, #{difficulty}, NOW(), NOW(), #{user.id})
    </insert>
    <insert id="batchSave" parameterType="java.util.List">
        INSERT INTO word(vocabulary, meaning, hint, difficulty, created_at, updated_at, user_id)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.vocabulary}, #{item.meaning}, #{item.hint}, #{item.difficulty}, NOW(), NOW(), #{item.user.id})
        </foreach>
    </insert>

    <update id="update"
            parameterType="com.adam9e96.wordlol.entity.Word">
        UPDATE word
        SET vocabulary = #{vocabulary},
            meaning    = #{meaning},
            hint       = #{hint},
            difficulty = #{difficulty},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE
        FROM word
        WHERE id = #{id}
    </delete>

    <select id="findById" resultMap="WordResultMap">
        SELECT
            w.id,
            w.vocabulary,
            w.meaning,
            w.hint,
            w.difficulty,
            w.created_at,
            w.updated_at,
            w.word_book_id,
            w.user_id
        FROM word w
        WHERE w.id = #{id}
    </select>
    <select id="findWordByHint" resultMap="WordResultMap">
        SELECT hint
        FROM word
        WHERE id = #{id}
    </select>
    <select id="findByIdAndUserId" resultMap="WordResultMap">
        SELECT
            w.id,
            w.vocabulary,
            w.meaning,
            w.hint,
            w.difficulty,
            w.created_at,
            w.updated_at,
            w.word_book_id,
            w.user_id
        FROM word w
        WHERE w.id = #{id} AND w.user_id = #{userId}
    </select>
    <select id="findByIdAndWordBookId" resultMap="WordResultMap">
        SELECT
            w.id,
            w.vocabulary,
            w.meaning,
            w.hint,
            w.difficulty,
            w.created_at,
            w.updated_at,
            w.word_book_id,
            w.user_id
        FROM word w
        WHERE w.id = #{id} AND w.word_book_id = #{wordBookId}
    </select>

    <!-- 랜덤 5개 단어 조회 -->
    <select id="findRandom5Words" resultMap="WordResultMap">
        SELECT id,
               vocabulary,
               meaning,
               null as hint,
               difficulty,
               null as created_at,
               null as updated_at
        FROM word
        ORDER BY RAND() LIMIT 5
    </select>

    <!-- 최근 5개 단어 조회-->
    <select id="findRecent5Words" resultMap="WordResultMap">
        SELECT id,
               vocabulary,
               meaning,
               hint,
               difficulty,
               created_at,
               null as updated_at
        FROM word
        ORDER BY id DESC LIMIT 5
    </select>
    <select id="countAll" resultType="int">
        SELECT COUNT(*)
        FROM word
    </select>

    <select id="findAllByWordBookId" resultMap="WordResultMap">
        SELECT e.id,
               e.vocabulary,
               e.meaning,
               e.hint,
               e.difficulty,
               e.created_at,
               e.updated_at
        FROM word e
        WHERE word_book_id = #{wordBookId}
    </select>
    <select id="findAllWithPaging" resultMap="WordResultMap">
        SELECT id,
               vocabulary,
               meaning,
               hint,
               difficulty,
               created_at,
               updated_at
        FROM word
        WHERE user_id = #{userId}
        ORDER BY id DESC
            LIMIT #{pageSize}
        OFFSET #{offset}
    </select>

    <select id="searchWords" resultMap="WordResultMap">
        SELECT id, vocabulary, meaning, hint, difficulty, created_at, updated_at
        FROM word
        WHERE user_id = #{userId}
        <if test="keyword != null and keyword != ''">
            AND (vocabulary LIKE CONCAT('%', #{keyword}, '%')
            OR meaning LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        ORDER BY id DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countSearchResults" resultType="long">
        SELECT COUNT(*)
        FROM word
        WHERE user_id = #{userId}
        <if test="keyword != null and keyword != ''">
            AND (vocabulary LIKE CONCAT('%', #{keyword}, '%')
            OR meaning LIKE CONCAT('%', #{keyword}, '%'))
        </if>
    </select>
    <select id="findByUserWithPaging" resultMap="WordResultMap">
        SELECT id,
               vocabulary,
               meaning,
               hint,
               difficulty,
               created_at,
               updated_at
        FROM word
        WHERE user_id = #{userId}
        ORDER BY id DESC
            LIMIT #{pageable.pageSize}
        OFFSET #{pageable.offset}
    </select>
    <select id="countByUser" resultType="long">
        SELECT COUNT(*)
        FROM word
        WHERE user_id = #{userId}
    </select>
    <select id="findRandomWordByUserId" resultMap="WordResultMap">
        SELECT id,
               vocabulary,
               meaning,
               hint,
               difficulty,
               created_at,
               updated_at
        FROM word
        WHERE user_id = #{userId}
        ORDER BY RAND() LIMIT 1
    </select>
    <select id="findRandomWordsByUserId" resultMap="WordResultMap">
        SELECT id,
               vocabulary,
               meaning,
               hint,
               difficulty,
               created_at,
               updated_at
        FROM word
        WHERE user_id = #{userId}
        ORDER BY RAND() LIMIT #{limit}
    </select>
    <select id="findByWordBookId" resultMap="WordResultMap">
        SELECT e.id,
               e.vocabulary,
               e.meaning,
               e.hint,
               e.difficulty,
               e.created_at,
               e.updated_at
        FROM word e
                 JOIN word_book wb ON e.word_book_id = wb.id
        WHERE e.word_book_id = #{wordBookId}
          AND wb.user_id = #{userId}
        ORDER BY e.id DESC /* 최신 단어부터 조회 */
    </select>
</mapper>